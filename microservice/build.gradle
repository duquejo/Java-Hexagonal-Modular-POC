buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version  "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.diffplug.spotless' version '7.0.0.BETA1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'com.diffplug.spotless'

    /**
     * UTF-8 compile encoding
     */
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
    tasks.withType(Test) { systemProperty "file.encoding", "UTF-8" }

    /**
     * SpringBoot
     */
    project.ext.springbootweb = ["org.springframework.boot:spring-boot-starter-web:${springBootVersion}"]
    project.ext.springdevtools = ["org.springframework.boot:spring-boot-devtools:${springBootVersion}"]

    /**
     * Database
     */
    project.ext.springbootjpa = ["org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"]
    project.ext.db = ["com.mysql:mysql-connector-j:9.0.0"]

    /**
     * Testing
     */
    project.ext.springboottest = ["org.springframework.boot:spring-boot-starter-test:${springBootVersion}"]
    project.ext.junitplatform = ["org.junit.platform:junit-platform-launcher:1.10.3"]
}


spotless {
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**'
        }
        toggleOffOn()
        importOrder()
        removeUnusedImports()
        palantirJavaFormat()
        trimTrailingWhitespace()
        endWithNewline()
        formatAnnotations()
    }
}

group = 'com.duquejo.hexagonal.tasks'
version = "${tasksApplicationVersion}"
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    implementation project.ext.springbootweb
    runtimeOnly project.ext.springdevtools

    implementation project(':infrastructure')
}